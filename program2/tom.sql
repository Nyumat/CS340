-- Company Database from the textbook

CREATE TABLE DEPARTMENT (
      DNAME VARCHAR(20) NOT NULL,
      DNUMBER INT(2) NOT NULL CHECK (DNUMBER > 0 AND DNUMBER < 41),
      MGR_SSN CHAR(9) NOT NULL,
      MGR_START_DATE DATE NOT NULL,
      PRIMARY KEY (DNUMBER),
      UNIQUE (DNAME)
)ENGINE = INNODB;

CREATE TABLE EMPLOYEE (
      FNAME VARCHAR(15) NOT NULL,
      LNAME VARCHAR(15) NOT NULL,
      SSN CHAR(9) NOT NULL,
      BDATE DATE NOT NULL,
      ADDRESS VARCHAR(30) NOT NULL,
      SEX CHAR(1) NOT NULL,
      SALARY DECIMAL(10, 2) NOT NULL,
      SUPER_SSN CHAR(9),
      DNO INT(2) NOT NULL,
      CONSTRAINT FULLNAME UNIQUE(FNAME, LNAME),
      PRIMARY KEY (SSN),
      FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNUMBER)
)ENGINE = INNODB;

CREATE TABLE PROJECT (
      PNAME VARCHAR(20) NOT NULL,
      PNUMBER INT(4) NOT NULL,
      PLOCATION VARCHAR(20) NOT NULL,
      DNUM INT(2) NOT NULL,
      PRIMARY KEY (PNUMBER),
      UNIQUE (PNAME),
      FOREIGN KEY (DNUM) REFERENCES DEPARTMENT(DNUMBER)
)ENGINE = INNODB;

CREATE TABLE WORKS_ON (
      ESSN CHAR(9) NOT NULL,
      PNO INT(2) NOT NULL,
      HOURS DECIMAL(3, 1),
      PRIMARY KEY (ESSN, PNO),
      FOREIGN KEY (ESSN) REFERENCES EMPLOYEE(SSN),
      FOREIGN KEY (PNO) REFERENCES PROJECT(PNUMBER)
)ENGINE = INNODB;

CREATE TABLE DEPENDENT (
      ESSN CHAR(9) NOT NULL,
      DEPENDENT_NAME VARCHAR(15) NOT NULL,
      SEX CHAR(1) NOT NULL,
      BDATE DATE NOT NULL,
      RELATIONSHIP VARCHAR(8) NOT NULL,
      PRIMARY KEY (ESSN, DEPENDENT_NAME),
      FOREIGN KEY (ESSN) REFERENCES EMPLOYEE(SSN)
)ENGINE = INNODB;

CREATE TABLE DEPT_LOCATIONS (
      DNUMBER INT(2) NOT NULL,
      DLOCATION VARCHAR(15) NOT NULL,
      PRIMARY KEY (DNUMBER, DLOCATION),
      FOREIGN KEY (DNUMBER) REFERENCES DEPARTMENT(DNUMBER)
)ENGINE = INNODB;

CREATE TABLE DEPT_STATS (
      DNUMBER INT(2) NOT NULL,
      EMP_COUNT INT(11) NOT NULL,
      AVG_SALARY DECIMAL(10, 2) NOT NULL,
      PRIMARY KEY (DNUMBER)
)ENGINE = INNODB;

DELIMITER $$

CREATE PROCEDURE INITDEPTSTATS(
)
BEGIN
      INSERT INTO DEPT_STATS (
            DNUMBER,
            EMP_COUNT,
            AVG_SALARY
      )
            SELECT
                  DNO,
                  COUNT(*),
                  AVG(SALARY)
            FROM
                  EMPLOYEE
            GROUP BY
                  DNO;
END $$ DELIMITER;
DELIMITER $$ CREATE TRIGGER `DELETEDEPTSTATS` AFTER
DELETE ON EMPLOYEE FOR EACH ROW BEGIN UPDATE DEPT_STATS SET EMP_COUNT = EMP_COUNT - 1,
AVG_SALARY = (
      SELECT
            AVG(SALARY)
      FROM
            EMPLOYEE
      WHERE
            DNO = OLD.DNO
)
WHERE
      DNUMBER = OLD.DNO;
END $$ DELIMITER;
DELIMITER $$ CREATE TRIGGER `INSERTDEPTSTATS` AFTER INSERT ON EMPLOYEE FOR EACH ROW BEGIN UPDATE DEPT_STATS SET EMP_COUNT = EMP_COUNT + 1, AVG_SALARY = (
      SELECT AVG(SALARY) FROM EMPLOYEE WHERE DNO = NEW.DNO
) WHERE DNUMBER = NEW.DNO;
END $$ DELIMITER;
DELIMITER $$ CREATE TRIGGER `UPDATEDEPTSTATS` AFTER
UPDATE ON EMPLOYEE FOR EACH ROW BEGIN
UPDATE DEPT_STATS
SET
      EMP_COUNT = EMP_COUNT - 1,
      AVG_SALARY = (
            SELECT AVG(SALARY) FROM EMPLOYEE WHERE DNO = OLD.DNO
      )
WHERE
      DNUMBER = OLD.DNO;
UPDATE DEPT_STATS
SET
      EMP_COUNT = EMP_COUNT + 1,
      AVG_SALARY = (
            SELECT AVG(SALARY) FROM EMPLOYEE WHERE DNO = NEW.DNO
      )
WHERE
      DNUMBER = NEW.DNO;
END $$ DELIMITER;
DELIMITER $$ CREATE TRIGGER `MAXTOTALHOURS` BEFORE INSERT ON WORKS_ON FOR EACH ROW BEGIN DECLARE TOTALHOURS DECIMAL(
      3,
      1
);
DECLARE
      CUSTOMMESSAGE VARCHAR(100);
      SELECT        SUM(COALESCE(HOURS, 0)) INTO TOTALHOURS FROM WORKS_ON WHERE ESSN = NEW.ESSN;
      IF            TOTALHOURS + NEW.HOURS > 40 THEN
            SET CUSTOMMESSAGE = CONCAT('Error: You entered ', NEW.HOURS, ' hours, you currently work ', TOTALHOURS, ' hours, and the maximum total hours is 40.');
            SIGNAL        SQLSTATE '45000' SET MESSAGE_TEXT = CUSTOMMESSAGE;
      END IF;
      IF            NEW.HOURS > 40 THEN
            SET CUSTOMMESSAGE = CONCAT('Error: You entered ', NEW.HOURS, ' hours, and the maximum hours is 40.');
            SIGNAL        SQLSTATE '45000' SET MESSAGE_TEXT = CUSTOMMESSAGE;
      END IF;
END $$ DELIMITER;
DELIMITER     $$ CREATE FUNCTION `PAYLEVEL` (
      SSN INT
) RETURNS VARCHAR(100)
BEGIN
      DECLARE
            AVGSALARY DECIMAL(10, 2);
            DECLARE   EMPLOYEESALARY DECIMAL(10, 2);
            SELECT    E.SALARY INTO EMPLOYEESALARY FROM EMPLOYEE AS E WHERE E.SSN = SSN GROUP BY E.SSN;
            SELECT    DEPT.AVG_SALARY INTO AVGSALARY FROM EMPLOYEE AS EMP, DEPT_STATS AS DEPT WHERE EMP.DNO = DEPT.DNUMBER AND EMP.SSN = SSN;
            IF        (EMPLOYEESALARY = AVGSALARY) THEN
                  RETURN 'Average';
            END IF;
            IF        (EMPLOYEESALARY > AVGSALARY) THEN
                  RETURN 'Above Average';
            END IF;
            IF        (EMPLOYEESALARY < AVGSALARY) THEN
                  RETURN 'Below Average';
            END IF;
      END $$ DELIMITER;
      INSERT        INTO DEPARTMENT VALUES ('Research', 5, 333445555, '1988-05-22'), ('Administration', 4, 987654321, '1995-01-01'), ('Headquarters', 1, 888665555, '1981-06-19');
      INSERT        INTO EMPLOYEE VALUES ('John', 'Smith', 123456789, '1965-01-09', '731 Fondren, Houston TX', 'M', 30000, 333445555, 5), ('Franklin', 'Wong', 333445555, '1965-12-08', '638 Voss, Houston TX', 'M', 40000, 888665555, 5), ('Alicia', 'Zelaya', 999887777, '1968-01-19', '3321 Castle, Spring TX', 'F', 25000, 987654321, 4), ('Jennifer', 'Wallace', 987654321, '1941-06-20', '291 Berry, Bellaire TX', 'F', 43000, 888665555, 4), ('Ramesh', 'Narayan', 666884444, '1962-09-15', '975 Fire Oak, Humble TX', 'M', 38000, 333445555, 5), ('Joyce', 'English', 453453453, '1972-07-31', '5631 Rice, Houston TX', 'F', 25000, 333445555, 5), ('Ahmad', 'Jabbar', 987987987, '1969-03-29', '980 Dallas, Houston TX', 'M', 25000, 987654321, 4), ('James', 'Borg', 888665555, '1937-11-10', '450 Stone, Houston TX', 'M', 55000, NULL, 1);
      INSERT        INTO PROJECT VALUES ('ProductX', 1, 'Bellaire', 5), ('ProductY', 2, 'Sugarland', 5), ('ProductZ', 3, 'Houston', 5), ('Computerization', 10, 'Stafford', 4), ('Reorganization', 20, 'Houston', 1), ('Newbenefits', 30, 'Stafford', 4);
      INSERT        INTO WORKS_ON VALUES (123456789, 1, 32.5), (123456789, 2, 7.5), (666884444, 3, 40.0), (453453453, 1, 20.0), (453453453, 2, 20.0), (333445555, 2, 10.0), (333445555, 3, 10.0), (333445555, 10, 10.0), (333445555, 20, 10.0), (999887777, 30, 30.0), (999887777, 10, 10.0), (987987987, 10, 35.0), (987987987, 30, 5.0), (987654321, 30, 20.0), (987654321, 20, 15.0), (888665555, 20, NULL);
      INSERT        INTO DEPENDENT VALUES (333445555, 'Alice', 'F', '1986-04-04', 'Daughter'), (333445555, 'Theodore', 'M', '1983-10-25', 'Son'), (333445555, 'Joy', 'F', '1958-05-03', 'Spouse'), (987654321, 'Abner', 'M', '1942-02-28', 'Spouse'), (123456789, 'Michael', 'M', '1988-01-04', 'Son'), (123456789, 'Alice', 'F', '1988-12-30', 'Daughter'), (123456789, 'Elizabeth', 'F', '1967-05-05', 'Spouse');
      INSERT        INTO DEPT_LOCATIONS VALUES (1, 'Houston'), (4, 'Stafford'), (5, 'Bellaire'), (5, 'Sugarland'), (5, 'Houston');
      ALTER         TABLE DEPARTMENT ADD CONSTRAINT DEPEMP FOREIGN KEY (MGR_SSN) REFERENCES EMPLOYEE(SSN);
      ALTER         TABLE EMPLOYEE ADD CONSTRAINT EMPEMP FOREIGN KEY (SUPER_SSN) REFERENCES EMPLOYEE(SSN);
      CALL          INITDEPTSTATS();